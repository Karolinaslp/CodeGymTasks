Plan to write a chat system.
The system will consist of one server and multiple clients,
one for each chat participant.

PART 1: Work with ConsoleHelper class

    1. Add BufferedReader field and initialized it.
    2. Create writeMassage(),
              readString(),
              readInt() methods and  implement them.
    3. Add values for the MessageType enum.
    4. Implement Message class.

PART 2: Working with Connection class

    1. Add Socket, ObjectOutputStream, ObjectInputStream fields.
    2. Acknowledge about socket connection.
    3. Make Connection class serializable.
    4. Create send(),
              receive(),
              getRemoteSocketAddress(),
              close() methods and implement them.
    5. Implement Closeable interface.
    6. Add synchronized block in send() and receive() methods.

PART 3: Working with Server class

    1. Create nested private Handler class that inherits Thread.
    2. Implement Handler class.
    3. In main method create a server socket connection.
    4. In while look server waits for client to connect to the socket
       and creates a new Handler thread on which message will be exchanged.
    5. Add static Map field which contain clients names as key, and connection as value.
    6. Create and implement sendBroadcastMessage() method.
    7. In Handler nested class add serverHandshake() method that:
            a) Generate and send a username request
            b) Get the client's response
            c) Verify that the response has a username
            d) Extract the name from the response, and verify that it is not empty and is not already being used (use connectionMap)
            e) Add the new user and connection to connectionMap
            f) Send an informational message to the client, informing it that the name was accepted
            g) If any verification step fails, request the client's name again
            h) Return the accepted name as the return value
    8. Create and implement notifyUsers() method that:
            a) Iterate over connectionMap.
            b) For each element in step 1, get the client name, generate a USER_ADDED message that includes the passed name.
            c) Use the connection field to send the generated message.
            d) Don't send a USER_ADDED message to the user whose name is equal to userName.
    9. Create and implement serverMainLoop() method which in infinity loop:
            a) Receive client messages.
            b) If received message is text, than generate a new text message.
            c) Send generated message to all clients.
            d) If received message is not text, display an error message.

