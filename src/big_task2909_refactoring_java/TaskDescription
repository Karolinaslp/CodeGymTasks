REFACTORING JAVA

In this Big Task from CodeGym course I need to refactor and finish given bad quality code.
 PART 1:

    1.Pull up field children + getter/setter from Student and Teacher classes to Human class.
    2.Encapsulate a collection i getChildren()
    3.Remove setter for children
    4.Create and implement addChild(Human) and removeChild(Human) methods

 PART 2:

    1.Add Soldier class in human package;
    2.Delete isSoldier field
    3.Move fight method from Human to Soldier class
    4.Update the Human constructor's

 PART 3:

    1.Create Alive interface and move live() method into
    2.Push down course field getCourse() method
    3.Delete Professor class

 PART 4:

    1.Replace inheritance with delegation in University class
    2.Create UniversityPerson class with students list
    3.Change inheritance in Student and Teacher class
    4.Replace simple university field type to object University type

 PART 5:

    1.Create a template getPosition() method
    2.Replace the printData in subclasses with a template method
    3.Replace delegation with inheritance in Worker class

PART 6:

    1.Replace Student class setValue method with setCourse() and setAverageGrade() methods
    2.Implement getStudentWithAverageGrade(),
                getStudentWithHighestAverageGrade(),
                getStudentWithLowestAverageGrade(),
                expel() methods.
    3. Learning how to use stream(), lambda expression and Comparator.

PART 7:

    1.Replace parameters with object in setBeginningOfSession() and setEndOfSession() methods
    2.Replace incAverageGradeBy01() and intAverageGradeBy02 methods with incAverageGrade(double delta)
    3.Fix addStudentInfo() and printStudentInfo
    4.Encapsulate incAverageGrade() in Worker class
    5.Replace bloodType code in Human class with a BloodType class in human package
